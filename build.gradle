//------------------------------------------------------

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"

//------------------------------------------------------

String nome = "Uxi-amarelo"
String descricao = "Interface Web para Unha-de-gato."

group = "com.joseflavio"
archivesBaseName = "uxiamarelo"
version = "1.0-A11"

//------------------------------------------------------

[

"biblioteca", // Dependências diretas: *.jar
"fonte",      // Código fonte: *.java
"recurso",    // Anexos que serão embutidos no ".jar"
"projeto",    // Arquivos de projeto: doc, svg, psd, etc.
"web"         // Arquivos Web: html, css, js

].each { new File(it).mkdirs() }

//------------------------------------------------------

float javaVersao = 1.8
String codificacao = "ISO-8859-1"

sourceCompatibility = javaVersao

tasks.withType(JavaCompile) {
    options.encoding = codificacao
}

tasks.withType(GroovyCompile) {
    options.encoding = codificacao
    groovyOptions.encoding = codificacao
}

sourceSets {
    main.java.srcDirs = ["fonte"]
    main.resources.srcDirs = ["recurso"]
}

//------------------------------------------------------

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir:"biblioteca", include:["*.jar"])
    compile "com.joseflavio:unhadegato:1.0-A15"
    compile "org.apache.tomee:javaee-api:7.0-1"
    compile "org.apache.commons:commons-lang3:3.7"
}

//------------------------------------------------------

jar {
    manifest {
        attributes "Implementation-Title": nome,
                   "Implementation-Version": version,
                   "Class-Path": configurations.compile.collect{ it.getName() }.join(" ")
    }
}

//------------------------------------------------------

task warHTML(type: Copy) {
    into "$buildDir/web"
    from "$projectDir/web"
}

task warJava(type: Copy, dependsOn: compileJava) {
    into "$buildDir/web/WEB-INF/classes"
    from sourceSets.main.output.classesDir
}

task warRec(type: Copy) {
    into "$buildDir/web/WEB-INF/classes"
    from "$projectDir/recurso"
}

task warDep(type: Copy) {
    into "$buildDir/web/WEB-INF/lib"
    from configurations.runtime
    exclude "javax.*"
    exclude "javaee-api*"
    exclude "validation-api*"
    exclude "geronimo-osgi*"
    exclude "log4j*"
    exclude "junit*"
    exclude "hamcrest*"
    exclude "groovy*"
    exclude "jython*"
}

task war(type: Zip, dependsOn: [warHTML, warJava, warRec, warDep]) {
    archiveName = archivesBaseName + ".war"
    destinationDir = file("$buildDir")
    into ""
    from "$buildDir/web"
    includeEmptyDirs = true
}

task dist(dependsOn: [war]) {
}

build.dependsOn dist

//------------------------------------------------------

task tomcatRemover(type: Delete) {
    nome = "$System.env.CATALINA_HOME/webapps/" + archivesBaseName + ".war"
    if( file(nome).exists() ){
        delete nome
    }
}

task tomcat(type: Copy, dependsOn: [tomcatRemover, war]) {
    into "$System.env.CATALINA_HOME/webapps"
    from "$buildDir/" + archivesBaseName + ".war"
}

//------------------------------------------------------

eclipse {
    project {
        name = archivesBaseName
        comment = descricao
    }
    jdt {
        sourceCompatibility = javaVersao
        targetCompatibility = javaVersao
    }
}

eclipseJdt << {
    file(".settings/org.eclipse.core.resources.prefs").text =
        "eclipse.preferences.version=1\nencoding/<project>=" + codificacao
}

//------------------------------------------------------

idea {
    project {
        vcs = "Git"
        ipr {
            withXml {
                def projeto = it.asNode()
                def encoding = projeto.component.find { it.@name == "Encoding" }
                encoding.appendNode("file", [url: "PROJECT", charset: codificacao])
            }
        }
    }
    module {
        languageLevel = new org.gradle.plugins.ide.idea.model.IdeaLanguageLevel(javaVersao)
        jdkName = "" + javaVersao
    }
}

//------------------------------------------------------